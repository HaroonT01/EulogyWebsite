[{"/Users/mehvishfatima/Desktop/winter/the-last-show-mehvish-and-farhana/src/index.js":"1","/Users/mehvishfatima/Desktop/winter/the-last-show-mehvish-and-farhana/src/reportWebVitals.js":"2","/Users/mehvishfatima/Desktop/winter/the-last-show-mehvish-and-farhana/src/App.js":"3","/Users/mehvishfatima/Desktop/winter/381/ draf of project/src/index.js":"4","/Users/mehvishfatima/Desktop/winter/381/ draf of project/src/Layout.js":"5","/Users/mehvishfatima/Desktop/winter/381/ draf of project/src/Empty.js":"6","/Users/mehvishfatima/Desktop/winter/381/ draf of project/src/Popup.js":"7"},{"size":535,"mtime":1680536214697,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1680536214697,"results":"10","hashOfConfig":"9"},{"size":1580,"mtime":1681077631688,"results":"11","hashOfConfig":"9"},{"size":281,"mtime":1681398925000,"results":"12","hashOfConfig":"13"},{"size":3517,"mtime":1681705699908,"results":"14","hashOfConfig":"13"},{"size":141,"mtime":1681404366000,"results":"15","hashOfConfig":"13"},{"size":3013,"mtime":1681720444094,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1if8xw2",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3k8wk5",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mehvishfatima/Desktop/winter/the-last-show-mehvish-and-farhana/src/index.js",[],[],"/Users/mehvishfatima/Desktop/winter/the-last-show-mehvish-and-farhana/src/reportWebVitals.js",[],[],"/Users/mehvishfatima/Desktop/winter/the-last-show-mehvish-and-farhana/src/App.js",[],[],"/Users/mehvishfatima/Desktop/winter/381/ draf of project/src/index.js",[],[],"/Users/mehvishfatima/Desktop/winter/381/ draf of project/src/Layout.js",["39","40"],[],"import React, { useState, useEffect } from 'react';\r\nimport Empty from './Empty';\r\nimport './Layout.css';\r\nimport Popup from './Popup';\r\nimport {fill} from \"@cloudinary/url-gen/actions/resize\";\r\nimport { AdvancedImage } from '@cloudinary/react';\r\n\r\nimport {CloudinaryImage} from '@cloudinary/url-gen';\r\n\r\nconst Layout = () => {\r\n  const currentDate = new Date().toISOString().slice(0, 16);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [notes, setNotes] = useState(JSON.parse(localStorage.getItem('notes')) || []);\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const myImage = new CloudinaryImage('sample', {cloudName: 'dnykszhhp'}).resize(fill().width(100).height(150));\r\n\r\n  const handleAddButtonClick = () => {\r\n    document.querySelector(\"body\").style.overflow = \"hidden\";\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const handlePopupClose = () => {\r\n    document.querySelector(\"body\").style.overflow = \"auto\";\r\n    setShowPopup(false);\r\n  };\r\n\r\n  const addNote = (newNote) => {\r\n    const newNotes = [...notes, newNote];\r\n    setNotes(newNotes);\r\n    localStorage.setItem('notes', JSON.stringify(newNotes));\r\n  };\r\n\r\n  const deleteNote = (id) => {\r\n    const updatedNotes = notes.filter(note => note.id !== id);\r\n    setNotes(updatedNotes);\r\n    localStorage.setItem('notes', JSON.stringify(updatedNotes));\r\n  };\r\n\r\n  const updateNote = (id, title) => {\r\n    const updatedNotes = notes.map(note => {\r\n      if (note.id === id) {\r\n        return { ...note, title };\r\n      }\r\n      return note;\r\n    });\r\n    setNotes(updatedNotes);\r\n    localStorage.setItem('notes', JSON.stringify(updatedNotes));\r\n  };\r\n\r\n  const showMenu = () => {\r\n    setMenuVisible(!menuVisible);\r\n  };\r\n  const formatDate = (date) => {\r\n    const d = new Date(date);\r\n    const month = d.toLocaleString('default', { month: 'long' });\r\n    const day = d.getDate();\r\n    const year = d.getFullYear();\r\n    return `${month} ${day}, ${year}`;\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <header>\r\n        <aside>&nbsp;</aside>\r\n  \r\n        <div id=\"app-header\">\r\n          <h1>\r\n          The Last Show\r\n          </h1>\r\n        </div>\r\n  \r\n        <aside>\r\n          <button className=\"add-note-btn\" onClick={handleAddButtonClick}>+ New Obiturary</button>\r\n        </aside>\r\n      </header>\r\n      <hr />\r\n      {notes.length === 0 && <Empty />}\r\n      {showPopup && <Popup onClose={handlePopupClose} onSubmit={addNote} />}\r\n      <div className=\"notes\">\r\n        {notes.map(note => (\r\n          <div key={note.id} className=\"note\">\r\n         <img src={note.image} alt={note.title} className=\"note-image\" />\r\n         <h3 className=\"note-title\">{note.title}</h3>\r\n    <p className=\"note-dates\">{formatDate(note.born)} - {formatDate(note.died)}</p>\r\n    <div className=\"bottom-content\">\r\n              <div className=\"settings\">\r\n                <i onClick={showMenu} className=\"uil uil-ellipsis-h\"></i>\r\n                <ul className={`menu ${menuVisible ? 'visible' : ''}`}>\r\n                  <li onClick={() => updateNote(note.id, note.title)}><i className=\"uil uil-pen\"></i>Edit</li>\r\n                  <li onClick={() => deleteNote(note.id)}><i className=\"uil uil-trash\"></i>Delete</li>\r\n                </ul>\r\n              </div>\r\n              <button className=\"delete-btn\" onClick={() => deleteNote(note.id)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div>\r\n      <AdvancedImage cldImg={myImage} />\r\n    </div>\r\n  \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/Users/mehvishfatima/Desktop/winter/381/ draf of project/src/Empty.js",[],[],"/Users/mehvishfatima/Desktop/winter/381/ draf of project/src/Popup.js",[],[],{"ruleId":"41","severity":1,"message":"42","line":1,"column":27,"nodeType":"43","messageId":"44","endLine":1,"endColumn":36},{"ruleId":"41","severity":1,"message":"45","line":11,"column":9,"nodeType":"43","messageId":"44","endLine":11,"endColumn":20},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'currentDate' is assigned a value but never used."]